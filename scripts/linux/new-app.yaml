apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver-deployment
  namespace: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver-app
  template:
    metadata:
      labels:
        app: webserver-app
    spec:
      initContainers:
      - name: init-container
        image: busybox
        command: ['sh', '-c', 'sleep 30']
      containers:
      - name: webserver
        image: webserver:20231022105314
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 1
          tcpSocket:
            host:
            port: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
        lifecycle:
          postStart: 
            exec:
              command: ["sh", "-c", "echo 'Starting my container' > logs/starting-log.txt"]
          preStop:
            exec:
              command: ["sh", "-c", "echo 'Terminate my container' > logs/termination-log.txt"]
        volumeMounts:
          - name: termination-log-volume
            mountPath: /go/dockerize/logs/
      volumes:
        - name: termination-log-volume
          persistentVolumeClaim:
            claimName: termination-log-pvc
